# vi: set ft = ini.jinja :

{% set roles = [] -%}
{% do  roles.append('keystone') -%}
{% do  roles.append('mariadb-server') -%}
{% do  roles.append('memcached') -%}
{% do  roles.append('mysql-server') -%}
{% do  roles.append('postgresql') -%}
{% set minions = salt['roles.list_minions'](roles) -%}

[DEFAULT]
{#
#-------------------------------------------------------------------------------
# API
#-------------------------------------------------------------------------------
# admin_role                                     = admin
# enable_v1_registry                             = True
# enable_v2_registry                             = True
-#}
#-------------------------------------------------------------------------------
# Common
#-------------------------------------------------------------------------------
api_limit_max                                    = 1000
backlog                                          = 4096
bind_host                                        = 0.0.0.0
bind_port                                        = 9191
limit_param_default                              = 25
{#
# data_api                                       = glance.db.sqlalchemy.api
-#}
{#
#-------------------------------------------------------------------------------
# Database
#-------------------------------------------------------------------------------
# db_auto_create                                 = False
# sqlalchemy_debug                               = True
-#}
#-------------------------------------------------------------------------------
# Logging
#-------------------------------------------------------------------------------
log_file                                         = /var/log/glance/registry.log
{#
# debug                                          = False
# syslog_log_facility                            = LOG_LOCAL1
# use_syslog                                     = False
# verbose                                        = False
-#}
{#
#-------------------------------------------------------------------------------
# SSL
#-------------------------------------------------------------------------------
# ca_file                                        = /path/to/cafile
# cert_file                                      = /path/to/certfile
# key_file                                       = /path/to/keyfile
-#}
{#
#-------------------------------------------------------------------------------
# WSGI
#-------------------------------------------------------------------------------
# tcp_keepidle                                   = 600
-#}

[database]
backend                                          = sqlalchemy
{% set  connection = {} -%}
{% if   minions['mysql-server'] -%}
{% do   connection.update({'type': 'mysql'}) -%}
# mysql_sql_mode                                 = TRADITIONAL
{% elif minions['postgresql'] -%}
{% do   connection.update({'type': 'postgresql'}) -%}
{% else -%}
{% do   connection.update({'type': 'sqlite'}) -%}
{% endif -%}
{% if minions['mariadb-server']
   or minions['mysql-server']
   or minions['postgresql'] -%}
connection                                       = {{ connection.type }}://{{ connection.username }}:{{ connection.password }}@{{ connection.hostname }}/{{ connection.database }}{% if connection.database_ssl_ca %}?ssl_ca={{ connection.database_ssl_ca }}{% if connection.database_ssl_cert %}&ssl_cert={{ database_ssl_cert }}&ssl_key={{ connection.database_ssl_key }}{% endif %}{% endif %}
{% else -%}
connection                                       = sqlite:///$state_path/$sqlite_db
sqlite_db                                        = /var/lib/glance/glance.sqlite
# sqlite_synchronous                             = True
{% endif -%}
# connection_debug                               = 0
# connection_trace                               = False
# db_inc_retry_interval                          = True
# db_max_retries                                 = 20
# db_max_retry_interval                          = 10
# db_retry_interval                              = 1
# idle_timeout                                   = 3600
# max_overflow                                   = <None>
# max_pool_size                                  = <None>
# max_retries                                    = 10
# min_pool_size                                  = 1
# pool_timeout                                   = <None>
# retry_interval                                 = 10
# use_db_reconnect                               = False

[keystone_authtoken]
{% if minions['keystone'] -%}
auth_uri                                         = http://{{ minions['keystone'][0] }}:5000/
{% endif -%}
{% if minions['memcached'] -%}
memcached_servers                                = {{ minions['memcached']|join(',') }}
{% endif -%}
{#                                               =
# admin_password                                 = <None>
# admin_tenant_name                              = admin
# admin_token                                    = <None>
# admin_user                                     = <None>
# auth_admin_prefix                              =
# auth_host                                      = 127.0.0.1
# auth_port                                      = 35357
# auth_protocol                                  = https
# auth_version                                   = <None>
# cache                                          = <None>
# cafile                                         = <None>
# certfile                                       = <None>
# delay_auth_decision                            = False
# enforce_token_bind                             = permissive
# http_connect_timeout                           = <None>
# http_request_max_retries                       = 3
# identity_uri                                   = <None>
# include_service_catalog                        = True
# insecure                                       = False
# keyfile                                        = <None>
# memcache_secret_key                            = <None>
# memcache_security_strategy                     = <None>
# revocation_cache_time                          = 300
# signing_dir                                    = <None>
# token_cache_time                               = 300
-#}

[paste_deploy]
{#
# config_file                                    = glance-registry-paste.ini
# flavor                                         =
-#}
