# vi: set ft=ini.jinja :

{% set ipv4  = salt['config.get']('fqdn_ip4') -%}
{% set roles = [] -%}
{% do  roles.append('ceph-osd') -%}
{% do  roles.append('glance-api') -%}
{% do  roles.append('keystone') -%}
{% do  roles.append('mariadb-server') -%}
{% do  roles.append('memcached') -%}
{% do  roles.append('mysql-server') -%}
{% do  roles.append('postgresql') -%}
{% do  roles.append('qpidd') -%}
{% do  roles.append('radosgw') -%}
{% do  roles.append('rabbitmq-server') -%}
{% do  roles.append('redis-server') -%}
{% do  roles.append('swift-proxy') -%}
{% do  roles.append('tivoli-storage-manager') -%}
{% set minions = salt['roles.list_minions'](roles) -%}

[DEFAULT]
#-------------------------------------------------------------------------------
# API
#-------------------------------------------------------------------------------
api_paste_config                                 = /etc/cinder/api-paste.ini
volume_name_template                             = volume-%s
{#
# api_rate_limit                                 = True
# backdoor_port                                  = <None>
# enable_v1_api                                  = True
# enable_v2_api                                  = True
# extra_capabilities                             = {}
# max_header_line                                = 16384
# osapi_max_limit                                = 1000
# osapi_max_request_body_size                    = 114688
# osapi_volume_base_URL                          = <None>
# osapi_volume_extension                         = cinder.api.contrib.standard_extensions
# osapi_volume_ext_list                          =
# osapi_volume_listen                            = 0.0.0.0
# osapi_volume_listen_port                       = 8776
# osapi_volume_workers                           = <None>
# transfer_api_class                             = cinder.transfer.api.API
# volume_api_class                               = cinder.volume.api.API
# volume_transfer_key_length                     = 16
# volume_transfer_salt_length                    = 8
-#}
#-------------------------------------------------------------------------------
# Authentication and Authorization
#-------------------------------------------------------------------------------
{% if minions['keystone'] -%}
auth_strategy                                    = keystone
{% else -%}
auth_strategy                                    = noauth
{% endif -%}
{#
#-------------------------------------------------------------------------------
# Availability Zones
#-------------------------------------------------------------------------------
# cloned_volume_same_az                          = True
-#}
#-------------------------------------------------------------------------------
# Backup
#-------------------------------------------------------------------------------
{% if   minions['ceph-osd'] -%}
backup_driver                                    = cinder.backup.drivers.ceph
{% elif minions['swift-proxy'] -%}
backup_driver                                    = cinder.backup.drivers.swift
{% elif minions['tivoli-storage-manager'] -%}
backup_driver                                    = cinder.backup.drivers.tsm
{% endif -%}
{#
# backup_api_class                               = cinder.backup.api.API
# backup_compression_algorithm                   = zlib
# backup_manager                                 = cinder.backup.manager.BackupManager
# backup_metadata_version                        = 1
# backup_name_template                           = backup-%s
# backup_topic                                   = cinder-backup
# snapshot_name_template                         = snapshot-%s
# snapshot_same_host                             = True
-#}
{% if   minions['ceph-osd'] -%}
#-------------------------------------------------------------------------------
# Backup: Ceph
#-------------------------------------------------------------------------------
# backup_ceph_chunk_size                         = 134217728
# backup_ceph_conf                               = /etc/ceph/ceph.conf
# backup_ceph_pool                               = backups
# backup_ceph_stripe_count                       = 0
# backup_ceph_stripe_unit                        = 0
# backup_ceph_user                               = cinder
{% elif minions['swift-proxy'] -%}
#-------------------------------------------------------------------------------
# Backup: Swift
#-------------------------------------------------------------------------------
backup_swift_url                                 = http://{{ minions['swift-proxy'][0] }}:8080/v1/AUTH_
# backup_swift_auth                              = per_user
# backup_swift_container                         = volumebackups
# backup_swift_key                               = <None>
# backup_swift_object_size                       = 52428800
# backup_swift_retry_attempts                    = 3
# backup_swift_retry_backoff                     = 2
# backup_swift_user                              = <None>
{% elif minions['tivoli-storage-manager'] -%}
#-------------------------------------------------------------------------------
# Backup: Tivoli Storage Manager
#-------------------------------------------------------------------------------
# backup_tsm_compression                         = True
# backup_tsm_password                            = password
# backup_tsm_volume_prefix                       = backup
{% endif -%}
{#
#-------------------------------------------------------------------------------
# Block Devices
#-------------------------------------------------------------------------------
# available_devices                              =
-#}
#-------------------------------------------------------------------------------
# Common
#-------------------------------------------------------------------------------
host                                             = {{ salt['config.get']('fqdn') }}
lock_path                                        = /var/lock/cinder
my_ip                                            = {{ ipv4[0] }}
rootwrap_config                                  = /etc/cinder/rootwrap.conf
state_path                                       = /var/lib/cinder
{#
# compute_api_class                              = cinder.compute.nova.API
# default_availability_zone                      = <None>
# default_volume_type                            = <None>
# disable_process_locking                        = False
# enable_new_services                            = True
# iet_conf                                       = /etc/iet/ietd.conf
# lio_initiator_iqns                             =
# no_snapshot_gb_quota                           = False
# num_shell_tries                                = 3
# periodic_fuzzy_delay                           = 60
# periodic_interval                              = 60
# policy_default_rule                            = default
# policy_file                                    = policy.json
# report_interval                                = 10
# reserved_percentage                            = 0
# run_external_periodic_tasks                    = True
# service_down_time                              = 60
# ssl_ca_file                                    = <None>
# ssl_cert_file                                  = <None>
# ssl_key_file                                   = <None>
# storage_availability_zone                      = nova
# tcp_keepidle                                   = 600
# until_refresh                                  = 0
# use_forwarded_for                              = False
-#}
{#
#-------------------------------------------------------------------------------
# Compute
#-------------------------------------------------------------------------------
# nova_api_insecure                              = False
# nova_ca_certificates_file                      = <None>
# nova_catalog_admin_info                        = compute:nova:adminURL
# nova_catalog_info                              = compute:nova:publicURL
# nova_endpoint_admin_template                   = <None>
# nova_endpoint_template                         = <None>
# os_region_name                                 = <None>
-#}
#-------------------------------------------------------------------------------
# Database
#-------------------------------------------------------------------------------
sqlite_db                                        = cinder.sqlite
{#
# db_driver                                      = cinder.db
# sqlite_synchronous                             = True
-#}
{#
#-------------------------------------------------------------------------------
# Logging
#-------------------------------------------------------------------------------
# debug                                          = False
# default_log_levels                             = amqp=WARN,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=WARN,suds=INFO,iso8601=WARN,requests.packages.urllib3.connectionpool=WARN
# default_notification_level                     = INFO
# fatal_deprecations                             = False
# fatal_exception_format_errors                  = False
# log_config_append                              = <None>
# log_date_format                                = %Y-%m-%d %H:%M:%S
# log_dir                                        = <None>
# log_file                                       = <None>
# logging_context_format_string                  = %(asctime)s.%(msecs)03d %(process)d
# logging_debug_format_suffix                    = %(funcName)s %(pathname)s:%(lineno)d
# logging_default_format_string                  = %(asctime)s.%(msecs)03d %(process)d
# logging_exception_prefix                       = %(asctime)s.%(msecs)03d %(process)d TRACE %(name)s
# syslog_log_facility                            = LOG_USER
# use_stderr                                     = True
# use_syslog                                     = False
# use_syslog_rfc_format                          = False
# verbose                                        = False
-#}
{#
#-------------------------------------------------------------------------------
# Quota
#-------------------------------------------------------------------------------
# max_age                                        = 0
# quota_driver                                   = cinder.quota.DbQuotaDriver
# quota_gigabytes                                = 1000
# quota_snapshots                                = 10
# quota_volumes                                  = 10
# reservation_expire                             = 86400
# use_default_quota_class                        = True
-#}
#-------------------------------------------------------------------------------
# RPC
#-------------------------------------------------------------------------------
{% if   minions['rabbitmq-server'] -%}
rpc_backend                                      = rabbit
notification_driver                              = rabbit
{% elif minions['qpidd'] -%}
rpc_backend                                      = qpid
notification_driver                              = qpid
{% else -%}
rpc_backend                                      = zmq
notification_driver                              = noop
{% endif -%}
{#
# allowed_rpc_exception_modules                  = oslo.messaging.exceptions,nova.exception,cinder.exception,exceptions
# amqp_auto_delete                               = False
# amqp_durable_queues                            = False
# control_exchange                               = openstack
# default_publisher_id                           = <None>
# default_timeout                                = 20
# fake_rabbit                                    = False
# kombu_reconnect_delay                          = 1.0
# kombu_ssl_ca_certs                             =
# kombu_ssl_certfile                             =
# kombu_ssl_keyfile                              =
# kombu_ssl_version                              =
# matchmaker_heartbeat_freq                      = 300
# matchmaker_heartbeat_ttl                       = 600
# notification_topics                            = notifications
# onready                                        = <None>
# publish_errors                                 = False
# rpc_cast_timeout                               = 30
# rpc_conn_pool_size                             = 30
# rpc_response_timeout                           = 60
# rpc_thread_pool_size                           = 64
# transport_url                                  = <None>
# volume_topic                                   = cinder-volume
-#}
{% if   minions['rabbitmq-server'] -%}
#-------------------------------------------------------------------------------
# RPC: RabbitMQ
#-------------------------------------------------------------------------------
{% if   minions['rabbitmq-server']|count > 1 -%}
{% set socks = [] -%}
{% for minion in minions['rabbitmq-server'] -%}
{% do  socks.append(minion + ':5672') -%}
{% endfor -%}
rabbit_hosts                                     = {{ socks|join(',') }}
{% else -%}
rabbit_host                                      = {{ minions['rabbitmq-server'][0] }}
{% endif -%}
rabbit_password                                  = cinder
rabbit_userid                                    = cinder
rabbit_virtual_host                              = /cinder
# rabbit_ha_queues                               = False
# rabbit_login_method                            = AMQPLAIN
# rabbit_max_retries                             = 0
# rabbit_port                                    = 5672
# rabbit_retry_backoff                           = 2
# rabbit_retry_interval                          = 1
# rabbit_use_ssl                                 = False
{% elif minions['qpidd'] -%}
#-------------------------------------------------------------------------------
# RPC: Qpidd
#-------------------------------------------------------------------------------
{% if   minions['qpidd']|count > 1 -%}
{% set socks = [] -%}
{% for minion in minions['qpidd'] -%}
{% do  socks.append(minion + ':5672') -%}
{% endfor -%}
qpid_hosts                                       = {{ socks|join(',') }}
{% else -%}
qpid_hostname                                    = {{ minions['qpidd'][0] }}
{% endif -%}
# qpid_heartbeat                                 = 60
# qpid_password                                  =
# qpid_port                                      = 5672
# qpid_protocol                                  = tcp
# qpid_sasl_mechanisms                           =
# qpid_tcp_nodelay                               = True
# qpid_topology_version                          = 1
# qpid_username                                  =
{% else -%}
#-------------------------------------------------------------------------------
# RPC: ZeroMQ
#-------------------------------------------------------------------------------
rpc_zmq_host                                     = {{ salt['config.get']('fqdn') }}
# rpc_zmq_bind_address                           = *
# rpc_zmq_contexts                               = 1
# rpc_zmq_ipc_dir                                = /var/run/openstack
# rpc_zmq_matchmaker                             = oslo.messaging._drivers.matchmaker.MatchMakerLocalhost
# rpc_zmq_port                                   = 9501
# rpc_zmq_topic_backlog                          = <None>
{% endif -%}
{#
#-------------------------------------------------------------------------------
# Scheduler
#-------------------------------------------------------------------------------
# scheduler_default_filters                      = AvailabilityZoneFilter,CapacityFilter,
# scheduler_default_weighers                     = CapacityWeigher
# scheduler_driver                               = cinder.scheduler.filter_scheduler.FilterScheduler
# scheduler_host_manager                         = cinder.scheduler.host_manager.HostManager
# scheduler_json_config_location                 =
# scheduler_manager                              = cinder.scheduler.manager.SchedulerManager
# scheduler_max_attempts                         = 3
# scheduler_topic                                = cinder-scheduler
-#}
#-------------------------------------------------------------------------------
# Storage
#-------------------------------------------------------------------------------
iscsi_helper                                     = tgtadm
volumes_dir                                      = $state_path/volumes
{#
# allocated_capacity_weight_multiplier           = -1.0
# capacity_weight_multiplier                     = 1.0
# enabled_backends                               = <None>
# iscsi_iotype                                   = fileio
# iscsi_ip_address                               = $my_ip
# iscsi_num_targets                              = 100
# iscsi_port                                     = 3260
# iscsi_target_prefix                            = iqn.2010-10.org.openstack:
# iser_helper                                    = tgtadm
# iser_ip_address                                = $my_ip
# iser_num_targets                               = 100
# iser_port                                      = 3260
# iser_target_prefix                             = iqn.2010-10.org.iser.openstack:
# migration_create_volume_timeout_secs           = 300
# num_iser_scan_tries                            = 3
# num_volume_device_scan_tries                   = 3
# volume_backend_name                            = <None>
# volume_clear_ionice                            = <None>
# volume_clear_size                              = 0
# volume_clear                                   = zero
# volume_dd_blocksize                            = 1M
# volume_driver                                  = cinder.volume.drivers.lvm.LVMISCSIDriver
# volume_manager                                 = cinder.volume.manager.VolumeManager
# volume_service_inithost_offload                = False
# volume_tmp_dir                                 = <None>
# volume_usage_audit_period                      = month
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Coraid
#-------------------------------------------------------------------------------
# coraid_esm_address                             =
# coraid_group                                   = admin
# coraid_password                                = password
# coraid_repository_key                          = coraid_repository
# coraid_user                                    = admin
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Dell EqualLogic
#-------------------------------------------------------------------------------
# eqlx_chap_login                                = admin
# eqlx_chap_password                             = password
# eqlx_cli_max_retries                           = 5
# eqlx_cli_timeout                               = 30
# eqlx_group_name                                = group-0
# eqlx_pool                                      = default
# eqlx_use_chap                                  = False
-#}
{#
#-------------------------------------------------------------------------------
# Storage: EMC
#-------------------------------------------------------------------------------
# cinder_emc_config_file                         = /etc/cinder/cinder_emc_config.xml
# max_luns_per_storage_group                     = 256
# naviseccli_path                                =
# storage_vnx_pool_name                          = <None>
-#}
{% if   minions['glance-api'] -%}
#-------------------------------------------------------------------------------
# Storage: Glance
#-------------------------------------------------------------------------------
{% if   minions['glance-api']|count > 1 -%}
{% set socks = [] -%}
{% for minion in minions['glance-api'] -%}
{% do  socks.append(minion + ':9292') -%}
{% endfor -%}
glance_api_servers                               = {{ socks|join(',') }}
{% else -%}
glance_host                                      = {{ minions['glance-api'][0] }}
{% endif -%}
# allowed_direct_url_schemes                     =
# glance_api_insecure                            = False
# glance_api_ssl_compression                     = False
# glance_api_version                             = 1
# glance_num_retries                             = 0
# glance_port                                    = 9292
# glance_request_timeout                         = <None>
# image_conversion_dir                           = $state_path/conversion
# instance_format                                = "[instance: %(uuid)s] "
# instance_uuid_format                           = "[instance: %(uuid)s] "
# use_multipath_for_image_xfer                   = False
{% endif -%}
{#
#-------------------------------------------------------------------------------
# Storage: GlusterFS
#-------------------------------------------------------------------------------
# glusterfs_mount_point_base                     = $state_path/mnt
# glusterfs_qcow2_volumes                        = False
# glusterfs_shares_config                        = /etc/cinder/glusterfs_shares
# glusterfs_sparsed_volumes                      = True
-#}
{#
#-------------------------------------------------------------------------------
# Storage: GPFS
#-------------------------------------------------------------------------------
# gpfs_images_dir                                = <None>
# gpfs_images_share_mode                         = <None>
# gpfs_max_clone_depth                           = 0
# gpfs_mount_point_base                          = <None>
# gpfs_sparse_volumes                            = True
# gpfs_storage_pool                              = <None>
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Hitachi Data Systems Unified Storage
#-------------------------------------------------------------------------------
# hds_cinder_config_file                         = /opt/hds/hus/cinder_hus_conf.xml
-#}
{#
#-------------------------------------------------------------------------------
# Storage: HP 3PAR
#-------------------------------------------------------------------------------
# hp3par_api_url                                 =
# hp3par_cpg                                     = OpenStack
# hp3par_cpg_snap                                =
# hp3par_debug                                   = False
# hp3par_iscsi_ips                               =
# hp3par_password                                =
# hp3par_snapshot_expiration                     =
# hp3par_snapshot_retention                      =
# hp3par_username                                =
-#}
{#
#-------------------------------------------------------------------------------
# Storage: HP LeftHand
#-------------------------------------------------------------------------------
# hplefthand_api_url                             = <None>
# hplefthand_clustername                         = <None>
# hplefthand_debug                               = False
# hplefthand_iscsi_chap_enabled                  = False
# hplefthand_password                            = <None>
# hplefthand_username                            = <None>
-#}
{#
#-------------------------------------------------------------------------------
# Storage: HP MSA
#-------------------------------------------------------------------------------
# msa_vdisk                                      = OpenStack
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Huawei
#-------------------------------------------------------------------------------
# cinder_huawei_conf_file                        = /etc/cinder/cinder_huawei_conf.xml
-#}
{#
#-------------------------------------------------------------------------------
# Storage: IBM XIV/DS8K
#-------------------------------------------------------------------------------
# xiv_chap                                       = disabled
# xiv_ds8k_connection_type                       = iscsi
# xiv_ds8k_proxy                                 = xiv_ds8k_openstack.nova_proxy.XIVDS8KNovaProxy
-#}
#-------------------------------------------------------------------------------
# Storage: LVM
#-------------------------------------------------------------------------------
volume_group                                     = cinder-volumes
{#
# lvm_mirrors                                    = 0
# lvm_type                                       = default
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NAS
#-------------------------------------------------------------------------------
# nas_ip                                         =
# nas_login                                      = admin
# nas_password                                   =
# nas_private_key                                =
# nas_ssh_port                                   = 22
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NetApp iSCSI for Data ONTAP in 7-Mode
#-------------------------------------------------------------------------------
# netapp_login                                   = <None>
# netapp_password                                = <None>
# netapp_server_hostname                         = <None>
# netapp_server_port                             = 80
# netapp_size_multiplier                         = 1.2
# netapp_storage_family                          = ontap_cluster
# netapp_storage_protocol                        = iscsi
# netapp_transport_type                          = http
# netapp_vfiler                                  = <None>
# netapp_volume_list                             = <None>
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NetApp NFS for Data ONTAP in 7-Mode
#-------------------------------------------------------------------------------
# expiry_thres_minutes                           = 720
# netapp_login                                   = <None>
# netapp_password                                = <None>
# netapp_server_hostname                         = <None>
# netapp_server_port                             = 80
# netapp_storage_family                          = ontap_cluster
# netapp_storage_protocol                        = nfs
# netapp_transport_type                          = http
# thres_avl_size_perc_start                      = 20
# thres_avl_size_perc_stop                       = 60
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NetApp iSCSI for Clustered Data ONTAP
#-------------------------------------------------------------------------------
# netapp_login                                   = <None>
# netapp_password                                = <None>
# netapp_server_hostname                         = <None>
# netapp_server_port                             = 80
# netapp_size_multiplier                         = 1.2
# netapp_storage_family                          = ontap_cluster
# netapp_storage_protocol                        = iscsi
# netapp_transport_type                          = http
# netapp_vserver                                 = <None>
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NetApp NFS for Clustered Data ONTAP
#-------------------------------------------------------------------------------
# expiry_thres_minutes                           = 720
# netapp_copyoffload_tool_path                   = <None>
# netapp_login                                   = <None>
# netapp_password                                = <None>
# netapp_server_hostname                         = <None>
# netapp_server_port                             = 80
# netapp_storage_family                          = ontap_cluster
# netapp_storage_protocol                        = nfs
# netapp_transport_type                          = http
# netapp_vserver                                 = <None>
# thres_avl_size_perc_start                      = 20
# thres_avl_size_perc_stop                       = 60
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NetApp iSCSI for E-Series
#-------------------------------------------------------------------------------
# netapp_controller_ips                          = <None>
# netapp_login                                   = <None>
# netapp_password                                = <None>
# netapp_sa_password                             = <None>
# netapp_server_hostname                         = <None>
# netapp_server_port                             = 80
# netapp_storage_family                          = ontap_cluster
# netapp_storage_pools                           = <None>
# netapp_transport_type                          = http
# netapp_webservice_path                         = /devmgr/v2
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Nexenta iSCSI
#-------------------------------------------------------------------------------
# nexenta_blocksize                              =
# nexenta_host                                   =
# nexenta_iscsi_target_portal_port               = 3260
# nexenta_password                               = nexenta
# nexenta_rest_port                              = 2000
# nexenta_rest_protocol                          = auto
# nexenta_rrmgr_compression                      = 0
# nexenta_rrmgr_connections                      = 2
# nexenta_rrmgr_tcp_buf_size                     = 4096
# nexenta_sparsed_volumes                        = True
# nexenta_sparse                                 = False
# nexenta_target_group_prefix                    = cinder/
# nexenta_target_prefix                          = iqn.1986-03.com.sun:02:cinder-
# nexenta_user                                   = admin
# nexenta_volume                                 = cinder
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Nexenta NFS
#-------------------------------------------------------------------------------
# nexenta_mount_point_base                       = $state_path/mnt
# nexenta_nms_cache_volroot                      = True
# nexenta_shares_config                          = /etc/cinder/nfs_shares
# nexenta_volume_compression                     = on
-#}
{#
#-------------------------------------------------------------------------------
# Storage: NFS
#-------------------------------------------------------------------------------
# nfs_mount_options                              = <None>
# nfs_mount_point_base                           = $state_path/mnt
# nfs_oversub_ratio                              = 1.0
# nfs_shares_config                              = /etc/cinder/nfs_shares
# nfs_sparsed_volumes                            = True
# nfs_used_ratio                                 = 0.95
-#}
{% if minions['radosgw'] -%}
#-------------------------------------------------------------------------------
# Storage: RBD
#-------------------------------------------------------------------------------
# rbd_ceph_conf                                  =
# rbd_flatten_volume_from_snapshot               = False
# rbd_max_clone_depth                            = 5
# rbd_pool                                       = rbd
# rbd_secret_uuid                                = <None>
# rbd_user                                       = <None>
{% endif -%}
{#
#-------------------------------------------------------------------------------
# Storage: SAN
#-------------------------------------------------------------------------------
# san_clustername                                =
# san_ip                                         =
# san_is_local                                   = False
# san_login                                      = admin
# san_password                                   =
# san_private_key                                =
# san_ssh_port                                   = 22
# san_thin_provision                             = True
# ssh_conn_timeout                               = 30
# ssh_max_pool_conn                              = 5
# ssh_min_pool_conn                              = 1
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Scality
#-------------------------------------------------------------------------------
# scality_sofs_config                            = <None>
# scality_sofs_mount_point                       = $state_path/scality
# scality_sofs_volume_dir                        = cinder/volumes
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Solaris SAN
#-------------------------------------------------------------------------------
# san_zfs_volume_base                            = rpool/
-#}
{#
#-------------------------------------------------------------------------------
# Storage: SolidFire
#-------------------------------------------------------------------------------
# sf_account_prefix                              = <None>
# sf_allow_tenant_qos                            = False
# sf_api_port                                    = 443
# sf_emulate_512                                 = True
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Storwize
#-------------------------------------------------------------------------------
# storwize_svc_connection_protocol               = iSCSI
# storwize_svc_flashcopy_timeout                 = 120
# storwize_svc_iscsi_chap_enabled                = True
# storwize_svc_multihostmap_enabled              = True
# storwize_svc_multipath_enabled                 = False
# storwize_svc_vol_autoexpand                    = True
# storwize_svc_vol_compression                   = False
# storwize_svc_vol_easytier                      = True
# storwize_svc_vol_grainsize                     = 256
# storwize_svc_vol_iogrp                         = 0
# storwize_svc_volpool_name                      = volpool
# storwize_svc_vol_rsize                         = 2
# storwize_svc_vol_warning                       = 0
-#}
{#
#-------------------------------------------------------------------------------
# Storage: VMware vCenter VMDK
#-------------------------------------------------------------------------------
# vmware_api_retry_count                         = 10
# vmware_host_ip                                 = <None>
# vmware_host_password                           = <None>
# vmware_host_username                           = <None>
# vmware_host_version                            = <None>
# vmware_image_transfer_timeout_secs             = 7200
# vmware_max_objects_retrieval                   = 100
# vmware_task_poll_interval                      = 5
# vmware_volume_folder                           = cinder-volumes
# vmware_wsdl_location                           = <None>
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Windows
#-------------------------------------------------------------------------------
# windows_iscsi_lun_path                         = C:\iSCSIVirtualDisks
-#}
{#
#-------------------------------------------------------------------------------
# Storage: XenAPI NFS
#-------------------------------------------------------------------------------
# xenapi_connection_password                     = <None>
# xenapi_connection_url                          = <None>
# xenapi_connection_username                     = root
# xenapi_nfs_server                              = <None>
# xenapi_nfs_serverpath                          = <None>
# xenapi_sr_base_path                            = /var/run/sr-mount
-#}
{#
#-------------------------------------------------------------------------------
# Storage: Zadara
#-------------------------------------------------------------------------------
# zadara_password                                = <None>
# zadara_user                                    = <None>
# zadara_vol_encrypt                             = False
# zadara_vol_name_template                       = OS_%s
# zadara_vol_thin                                = True
# zadara_vpsa_allow_nonexistent_delete           = True
# zadara_vpsa_auto_detach_on_delete              = True
# zadara_vpsa_ip                                 = <None>
# zadara_vpsa_poolname                           = <None>
# zadara_vpsa_port                               = <None>
# zadara_vpsa_use_ssl                            = False
-#}
{#
#-------------------------------------------------------------------------------
# Testing
#-------------------------------------------------------------------------------
# monkey_patch                                   = False
# monkey_patch_modules                           =
-#}
{#
#-------------------------------------------------------------------------------
# Zoning
#-------------------------------------------------------------------------------
# zoning_mode                                    = none
-#}

[database]
{#
#-------------------------------------------------------------------------------
# Common
#-------------------------------------------------------------------------------
# idle_timeout                                   = 3600
# retry_interval                                 = 10
# use_tpool                                      = False
-#}
#-------------------------------------------------------------------------------
# Connection
#-------------------------------------------------------------------------------
{% set  connection = {} -%}
{% if   minions['mysql-server'] -%}
{% do   connection.update({'type': 'mysql'}) -%}
{% elif minions['postgresql'] -%}
{% do   connection.update({'type': 'postgresql'}) -%}
{% else -%}
{% do   connection.update({'type': 'sqlite'}) -%}
{% endif -%}
{% if minions['mariadb-server']
   or minions['mysql-server']
   or minions['postgresql'] -%}
connection                                       = {{ connection.type }}://{{ connection.username }}:{{ connection.password }}@{{ connection.hostname }}/{{ connection.database }}{% if connection.database_ssl_ca %}?ssl_ca={{ connection.database_ssl_ca }}{% if connection.database_ssl_cert %}&ssl_cert={{ database_ssl_cert }}&ssl_key={{ connection.database_ssl_key }}{% endif %}{% endif %}
{% else -%}
connection                                       = sqlite:///$state_path/$sqlite_db
{% endif -%}
{#
# connection_debug                               = 0
# connection_trace                               = False
-#}
{#
#-------------------------------------------------------------------------------
# Storage
#-------------------------------------------------------------------------------
# backend                                        = sqlalchemy
# max_overflow                                   = <None>
# max_pool_size                                  = 5
# max_retries                                    = 10
# min_pool_size                                  = 1
-#}

[keymgr]
{#
# api_class                                      = cinder.keymgr.conf_key_mgr.ConfKeyManager
# fixed_key                                      = <None>
-#}

[keystone_authtoken]
{% if minions['keystone'] -%}
auth_uri                                         = http://{{ minions['keystone'][0] }}:5000/
{% endif -%}
{% if minions['memcached'] -%}
memcached_servers                                = {{ minions['memcached']|join(',') }}
{% endif -%}
{#
# admin_password                                 = <None>
# admin_tenant_name                              = admin
# admin_token                                    = <None>
# admin_user                                     = <None>
# auth_admin_prefix                              =
# auth_host                                      = 127.0.0.1
# auth_port                                      = 35357
# auth_protocol                                  = https
# auth_version                                   = <None>
# cache                                          = <None>
# cafile                                         = <None>
# certfile                                       = <None>
# delay_auth_decision                            = False
# enforce_token_bind                             = permissive
# http_connect_timeout                           = <None>
# http_request_max_retries                       = 3
# identity_uri                                   = <None>
# include_service_catalog                        = True
# insecure                                       = False
# keyfile                                        = <None>
# memcache_secret_key                            = <None>
# memcache_security_strategy                     = <None>
# revocation_cache_time                          = 300
# signing_dir                                    = <None>
# token_cache_time                               = 300
-#}

[matchmaker_redis]
{% if minions['redis-server'] -%}
host                                             = {{ minions['redis-server'][0] }}
# password                                       = <None>
# port                                           = 6379
{% endif -%}

[matchmaker_ring]
{#
#-------------------------------------------------------------------------------
# RPC
#-------------------------------------------------------------------------------
# ringfile                                       = /etc/oslo/matchmaker_ring.json
-#}

[ssl]
{#
# ca_file                                        = <None>
# cert_file                                      = <None>
# key_file                                       = <None>
-#}
