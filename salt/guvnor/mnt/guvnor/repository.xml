{% set minions = salt['roles.list_minions']('postgresql') -%}
<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!DOCTYPE Repository PUBLIC "-//The Apache Software Foundation//DTD Jackrabbit 2.0//EN"
                            "http://jackrabbit.apache.org/dtd/repository-2.0.dtd">
<Repository>
{% if             minions['postgresql']
   and salt['config.get']('postgresql:database')
   and salt['config.get']('postgresql:user')
   and salt['config.get']('postgresql:password') -%}
  <FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
    <param name="driver"                 value="org.postgresql:Driver"/>
    <param name="url"                    value="jdbc:postgresql://{{ minions['postgresql'][0] }}/{{ salt['config.get']('postgresql:database') }}"/>
    <param name="user"                   value="{{ salt['config.get']('postgresql:user') }}"/>
    <param name="password"               value="{{ salt['config.get']('postgresql:password') }}"/>
    <param name="schema"                 value="postgresql"/>
    <param name="schemaObjectPrefix"     value="FS_"/>
  </FileSystem>
  <Security appName="Jackrabbit">
    <AccessManager class="org.apache.jackrabbit.core.security.simple.SimpleAccessManager">
    </AccessManager>
    <LoginModule class="org.apache.jackrabbit.core.security.simple.SimpleLoginModule">
    </LoginModule>
  </Security>
  <Workspaces rootPath="${rep.home}/workspaces" defaultWorkspace="default"/>
  <Workspace name="${wsp.name}">
    <FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
      <param name="driver"              value="org.postgresql:Driver"/>
      <param name="url"                 value="jdbc:postgresql://{{ minions['postgresql'][0] }}/{{ salt['config.get']('postgresql:database') }}"/>
      <param name="user"                value="{{ salt['config.get']('postgresql:user') }}"/>
      <param name="password"            value="{{ salt['config.get']('postgresql:password') }}"/>
      <param name="schema"              value="postgresql"/>
      <param name="schemaObjectPrefix"  value="FS_WS_${wsp.name}_"/>
    </FileSystem>
    <PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.PostgreSQLPersistenceManager">
      <param name="driver"              value="org.postgresql:Driver"/>
      <param name="url"                 value="jdbc:postgresql://{{ minions['postgresql'][0] }}/{{ salt['config.get']('postgresql:database') }}"/>
      <param name="user"                value="{{ salt['config.get']('postgresql:user') }}"/>
      <param name="password"            value="{{ salt['config.get']('postgresql:password') }}"/>
      <param name="schema"              value="postgresql"/>
      <param name="schemaObjectPrefix"  value="PM_WS_${wsp.name}_"/>
    </PersistenceManager>
    <SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
      <param name="path"                value="${wsp.home}/index"/>
      <param name="textFilterClasses"   value="org.apache.jackrabbit.extractor.MsWordTextExtractor,org.apache.jackrabbit.extractor.MsExcelTextExtractor,org.apache.jackrabbit.extractor.MsPowerPointTextExtractor,org.apache.jackrabbit.extractor.PdfTextExtractor,org.apache.jackrabbit.extractor.OpenOfficeTextExtractor,org.apache.jackrabbit.extractor.RTFTextExtractor,org.apache.jackrabbit.extractor.HTMLTextExtractor,org.apache.jackrabbit.extractor.XMLTextExtractor"/>
      <param name="extractorPoolSize"   value="2"/>
      <param name="supportHighlighting" value="true"/>
    </SearchIndex>
  </Workspace>
  <Versioning rootPath="${rep.home}/version">
    <FileSystem class="org.apache.jackrabbit.core.fs.db.DbFileSystem">
      <param name="driver"              value="org.postgresql:Driver"/>
      <param name="url"                 value="jdbc:postgresql://{{ minions['postgresql'][0] }}/{{ salt['config.get']('postgresql:database') }}"/>
      <param name="user"                value="{{ salt['config.get']('postgresql:user') }}"/>
      <param name="password"            value="{{ salt['config.get']('postgresql:password') }}"/>
      <param name="schema"              value="postgresql"/>
      <param name="schemaObjectPrefix"  value="Versioning_FS_"/>
    </FileSystem>
    <PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.PostgreSQLPersistenceManager">
      <param name="driver"              value="org.postgresql:Driver"/>
      <param name="url"                 value="jdbc:postgresql://{{ minions['postgresql'][0] }}/{{ salt['config.get']('postgresql:database') }}"/>
      <param name="user"                value="{{ salt['config.get']('postgresql:user') }}"/>
      <param name="password"            value="{{ salt['config.get']('postgresql:password') }}"/>
      <param name="schema"              value="postgresql"/>
      <param name="schemaObjectPrefix"  value="Versioning_PM_"/>
    </PersistenceManager>
  </Versioning>
  <SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
    <param name="path"                  value="${rep.home}/repository/index"/>
    <param name="textFilterClasses"     value="org.apache.jackrabbit.extractor.MsWordTextExtractor,org.apache.jackrabbit.extractor.MsExcelTextExtractor,org.apache.jackrabbit.extractor.MsPowerPointTextExtractor,org.apache.jackrabbit.extractor.PdfTextExtractor,org.apache.jackrabbit.extractor.OpenOfficeTextExtractor,org.apache.jackrabbit.extractor.RTFTextExtractor,org.apache.jackrabbit.extractor.HTMLTextExtractor,org.apache.jackrabbit.extractor.XMLTextExtractor"/>
    <param name="extractorPoolSize"     value="2"/>
    <param name="supportHighlighting"   value="true"/>
  </SearchIndex>
{% else -%}
  <FileSystem class="org.apache.jackrabbit.core.fs.local.LocalFileSystem">
    <param name="path"                  value="${rep.home}/repository"/>
  </FileSystem>
  <DataStore class="org.apache.jackrabbit.core.data.FileDataStore"/>
  <Security appName="Jackrabbit">
    <SecurityManager class="org.apache.jackrabbit.core.security.simple.SimpleSecurityManager" workspaceName="security">
    </SecurityManager>
    <AccessManager class="org.apache.jackrabbit.core.security.simple.SimpleAccessManager">
    </AccessManager>
    <LoginModule class="org.apache.jackrabbit.core.security.simple.SimpleLoginModule">
      <param name="anonymousId"         value="anonymous"/>
      <param name="adminId"             value="admin"/>
    </LoginModule>
  </Security>
  <Workspaces rootPath="${rep.home}/workspaces" defaultWorkspace="default"/>
  <Workspace name="${wsp.name}">
    <FileSystem class="org.apache.jackrabbit.core.fs.local.LocalFileSystem">
      <param name="path"                value="${wsp.home}"/>
    </FileSystem>
    <PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.DerbyPersistenceManager">
      <param name="url"                 value="jdbc:derby:${wsp.home}/db;create=true"/>
      <param name="schemaObjectPrefix"  value="${wsp.name}_"/>
    </PersistenceManager>
    <SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
      <param name="path"                value="${wsp.home}/index"/>
      <param name="supportHighlighting" value="true"/>
    </SearchIndex>
  </Workspace>
  <Versioning rootPath="${rep.home}/version">
    <FileSystem class="org.apache.jackrabbit.core.fs.local.LocalFileSystem">
      <param name="path"                value="${rep.home}/version" />
    </FileSystem>
    <PersistenceManager class="org.apache.jackrabbit.core.persistence.pool.DerbyPersistenceManager">
      <param name="url"                 value="jdbc:derby:${rep.home}/version/db;create=true"/>
      <param name="schemaObjectPrefix"  value="version_"/>
    </PersistenceManager>
  </Versioning>
  <SearchIndex class="org.apache.jackrabbit.core.query.lucene.SearchIndex">
    <param name="path"                  value="${rep.home}/repository/index"/>
    <param name="supportHighlighting"   value="true"/>
  </SearchIndex>
{% endif -%}
</Repository>
